{
  "version": 3,
  "sources": ["../../@capacitor-firebase/authentication/src/web.ts"],
  "sourcesContent": ["import { WebPlugin } from '@capacitor/core';\nimport type {\n  AuthCredential as FirebaseAuthCredential,\n  CustomParameters,\n  User as FirebaseUser,\n  UserCredential as FirebaseUserCredential,\n} from 'firebase/auth';\nimport {\n  applyActionCode,\n  confirmPasswordReset,\n  connectAuthEmulator,\n  createUserWithEmailAndPassword,\n  FacebookAuthProvider,\n  getAdditionalUserInfo,\n  getAuth,\n  GoogleAuthProvider,\n  OAuthCredential,\n  OAuthProvider,\n  sendEmailVerification,\n  sendPasswordResetEmail,\n  signInWithCustomToken,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n  updateEmail,\n  updatePassword,\n} from 'firebase/auth';\n\nimport type {\n  AdditionalUserInfo,\n  ApplyActionCodeOptions,\n  AuthCredential,\n  AuthStateChange,\n  ConfirmPasswordResetOptions,\n  CreateUserWithEmailAndPasswordOptions,\n  FirebaseAuthenticationPlugin,\n  GetCurrentUserResult,\n  GetIdTokenOptions,\n  GetIdTokenResult,\n  SendPasswordResetEmailOptions,\n  SetLanguageCodeOptions,\n  SignInOptions,\n  SignInResult,\n  SignInWithCustomTokenOptions,\n  SignInWithEmailAndPasswordOptions,\n  SignInWithPhoneNumberOptions,\n  UpdateEmailOptions,\n  UpdatePasswordOptions,\n  UseEmulatorOptions,\n  User,\n} from './definitions';\n\nexport class FirebaseAuthenticationWeb\n  extends WebPlugin\n  implements FirebaseAuthenticationPlugin\n{\n  public static readonly ERROR_NO_USER_SIGNED_IN = 'No user is signed in.';\n\n  constructor() {\n    super();\n    const auth = getAuth();\n    auth.onAuthStateChanged(user => this.handleAuthStateChange(user));\n  }\n\n  public async applyActionCode(options: ApplyActionCodeOptions): Promise<void> {\n    const auth = getAuth();\n    return applyActionCode(auth, options.oobCode);\n  }\n\n  public async createUserWithEmailAndPassword(\n    options: CreateUserWithEmailAndPasswordOptions,\n  ): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await createUserWithEmailAndPassword(\n      auth,\n      options.email,\n      options.password,\n    );\n    return this.createSignInResult(userCredential, null);\n  }\n\n  public async confirmPasswordReset(\n    options: ConfirmPasswordResetOptions,\n  ): Promise<void> {\n    const auth = getAuth();\n    return confirmPasswordReset(auth, options.oobCode, options.newPassword);\n  }\n\n  public async getCurrentUser(): Promise<GetCurrentUserResult> {\n    const auth = getAuth();\n    const userResult = this.createUserResult(auth.currentUser);\n    const result: GetCurrentUserResult = {\n      user: userResult,\n    };\n    return result;\n  }\n\n  public async getIdToken(\n    options?: GetIdTokenOptions,\n  ): Promise<GetIdTokenResult> {\n    const auth = getAuth();\n    if (!auth.currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    const idToken = await auth.currentUser.getIdToken(options?.forceRefresh);\n    const result: GetIdTokenResult = {\n      token: idToken || '',\n    };\n    return result;\n  }\n\n  public async sendEmailVerification(): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return sendEmailVerification(currentUser);\n  }\n\n  public async sendPasswordResetEmail(\n    options: SendPasswordResetEmailOptions,\n  ): Promise<void> {\n    const auth = getAuth();\n    return sendPasswordResetEmail(auth, options.email);\n  }\n\n  public async setLanguageCode(options: SetLanguageCodeOptions): Promise<void> {\n    const auth = getAuth();\n    auth.languageCode = options.languageCode;\n  }\n\n  public async signInWithApple(options?: SignInOptions): Promise<SignInResult> {\n    const provider = new OAuthProvider('apple.com');\n    this.applySignInOptions(options || {}, provider);\n    const auth = getAuth();\n    const userCredential = await signInWithPopup(auth, provider);\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithCustomToken(\n    options: SignInWithCustomTokenOptions,\n  ): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await signInWithCustomToken(auth, options.token);\n    return this.createSignInResult(userCredential, null);\n  }\n\n  public async signInWithEmailAndPassword(\n    options: SignInWithEmailAndPasswordOptions,\n  ): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await signInWithEmailAndPassword(\n      auth,\n      options.email,\n      options.password,\n    );\n    return this.createSignInResult(userCredential, null);\n  }\n\n  public async signInWithFacebook(\n    options?: SignInOptions,\n  ): Promise<SignInResult> {\n    const provider = new FacebookAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const auth = getAuth();\n    const userCredential = await signInWithPopup(auth, provider);\n    const authCredential =\n      FacebookAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithGithub(\n    options?: SignInOptions,\n  ): Promise<SignInResult> {\n    const provider = new OAuthProvider('github.com');\n    this.applySignInOptions(options || {}, provider);\n    const auth = getAuth();\n    const userCredential = await signInWithPopup(auth, provider);\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithGoogle(\n    options?: SignInOptions,\n  ): Promise<SignInResult> {\n    const provider = new GoogleAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const auth = getAuth();\n    const userCredential = await signInWithPopup(auth, provider);\n    const authCredential =\n      GoogleAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithMicrosoft(\n    options?: SignInOptions,\n  ): Promise<SignInResult> {\n    const provider = new OAuthProvider('microsoft.com');\n    this.applySignInOptions(options || {}, provider);\n    const auth = getAuth();\n    const userCredential = await signInWithPopup(auth, provider);\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithPhoneNumber(\n    _options: SignInWithPhoneNumberOptions,\n  ): Promise<SignInResult> {\n    throw new Error('Not implemented on web.');\n  }\n\n  public async signInWithPlayGames(): Promise<SignInResult> {\n    throw new Error('Not available on web.');\n  }\n\n  public async signInWithTwitter(\n    options?: SignInOptions,\n  ): Promise<SignInResult> {\n    const provider = new OAuthProvider('twitter.com');\n    this.applySignInOptions(options || {}, provider);\n    const auth = getAuth();\n    const userCredential = await signInWithPopup(auth, provider);\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithYahoo(options?: SignInOptions): Promise<SignInResult> {\n    const provider = new OAuthProvider('yahoo.com');\n    this.applySignInOptions(options || {}, provider);\n    const auth = getAuth();\n    const userCredential = await signInWithPopup(auth, provider);\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signOut(): Promise<void> {\n    const auth = getAuth();\n    await auth.signOut();\n  }\n\n  public async updateEmail(options: UpdateEmailOptions): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return updateEmail(currentUser, options.newEmail);\n  }\n\n  public async updatePassword(options: UpdatePasswordOptions): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return updatePassword(currentUser, options.newPassword);\n  }\n\n  public async useAppLanguage(): Promise<void> {\n    const auth = getAuth();\n    auth.useDeviceLanguage();\n  }\n\n  public async useEmulator(options: UseEmulatorOptions): Promise<void> {\n    const auth = getAuth();\n    const port = options.port || 9099;\n    connectAuthEmulator(auth, `${options.host}:${port}`);\n  }\n\n  private handleAuthStateChange(user: FirebaseUser | null): void {\n    const userResult = this.createUserResult(user);\n    const change: AuthStateChange = {\n      user: userResult,\n    };\n    this.notifyListeners('authStateChange', change);\n  }\n\n  private applySignInOptions(\n    options: SignInOptions,\n    provider: OAuthProvider | GoogleAuthProvider | FacebookAuthProvider,\n  ) {\n    if (options.customParameters) {\n      const customParameters: CustomParameters = {};\n      options.customParameters.map(parameter => {\n        customParameters[parameter.key] = parameter.value;\n      });\n      provider.setCustomParameters(customParameters);\n    }\n    if (options.scopes) {\n      for (const scope of options.scopes) {\n        provider.addScope(scope);\n      }\n    }\n  }\n\n  private createSignInResult(\n    userCredential: FirebaseUserCredential,\n    authCredential: FirebaseAuthCredential | null,\n  ): SignInResult {\n    const userResult = this.createUserResult(userCredential.user);\n    const credentialResult = this.createCredentialResult(authCredential);\n    const additionalUserInfoResult =\n      this.createAdditionalUserInfoResult(userCredential);\n    const result: SignInResult = {\n      user: userResult,\n      credential: credentialResult,\n      additionalUserInfo: additionalUserInfoResult,\n    };\n    return result;\n  }\n\n  private createCredentialResult(\n    credential: FirebaseAuthCredential | null,\n  ): AuthCredential | null {\n    if (!credential) {\n      return null;\n    }\n    const result: AuthCredential = {\n      providerId: credential.providerId,\n    };\n    if (credential instanceof OAuthCredential) {\n      result.accessToken = credential.accessToken;\n      result.idToken = credential.idToken;\n      result.secret = credential.secret;\n    }\n    return result;\n  }\n\n  private createUserResult(user: FirebaseUser | null): User | null {\n    if (!user) {\n      return null;\n    }\n    const result: User = {\n      displayName: user.displayName,\n      email: user.email,\n      emailVerified: user.emailVerified,\n      isAnonymous: user.isAnonymous,\n      phoneNumber: user.phoneNumber,\n      photoUrl: user.photoURL,\n      providerId: user.providerId,\n      tenantId: user.tenantId,\n      uid: user.uid,\n    };\n    return result;\n  }\n\n  private createAdditionalUserInfoResult(\n    credential: FirebaseUserCredential,\n  ): AdditionalUserInfo | null {\n    const additionalUserInfo = getAdditionalUserInfo(credential);\n    if (!additionalUserInfo) {\n      return null;\n    }\n    const { isNewUser, profile, providerId, username } = additionalUserInfo;\n    const result: AdditionalUserInfo = {\n      isNewUser,\n    };\n    if (providerId !== null) {\n      result.providerId = providerId;\n    }\n    if (profile !== null) {\n      result.profile = profile as { [key: string]: unknown };\n    }\n    if (username !== null && username !== undefined) {\n      result.username = username;\n    }\n    return result;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
